<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ace.cms.mapper.CommentMapper">

    <insert id="insert" parameterType="com.ace.cms.dto.CommentDto">
        INSERT INTO `jc_comment` (
        `comment_id`,
        `content_id`,
        `comment_user_id`,
        `reply_user_id`,
        `site_id`,
        `parent_id`,
        `ancestor_id`,
        `create_time`,
        `is_recommend`,
        `fake_name`
        )
        VALUES
        (
            #{commentId,jdbcType=BIGINT},
            #{contentId,jdbcType=BIGINT},
            #{commentUserId,jdbcType=BIGINT},
            #{replyUserId,jdbcType=BIGINT},
            #{siteId,jdbcType=BIGINT},
            #{parentId,jdbcType=BIGINT},
            #{ancestorId,jdbcType=BIGINT},
            now(),
            #{isRecommend,jdbcType=BIGINT},
            #{fakeName,jdbcType=VARCHAR}
        )
    </insert>


    <select id="getCommentPagesByContentId" resultType="com.ace.cms.dto.CommentDto">
        SELECT
        t1.comment_id as commentId,
        t1.content_id contentId,
        t1.comment_user_id commentUserId,
        t1.create_time createTime,
        t1.reply_count replyCount,
        t1.parent_id parentId,
        t1.is_recommend isRecommend,
        t1.ancestor_id as ancestorId,
        ifnull(t2.text,'') as text,
        t1.fake_name as fakeName
        FROM
        jc_comment t1
        LEFT JOIN jc_comment_ext t2 ON t1.comment_id = t2.comment_id
        WHERE
        t1.content_id = #{contentId,jdbcType=BIGINT}
        AND t1.parent_id is null
        ORDER BY t1.create_time DESC, t1.comment_id DESC
        limit #{start,jdbcType=BIGINT}, #{pageSize,jdbcType=BIGINT}
    </select>


<!-- <select id="getCommentPagesByUserId" resultType="com.ace.cms.dto.CommentDto">
        SELECT
        t1.comment_id as commentId,
        t1.content_id contentId,
        t1.comment_user_id commentUserId,
        t1.create_time createTime,
        t1.reply_count replyCount,
        t1.parent_id parentId,
        t1.is_recommend isRecommend,
        t1.ancestor_id as ancestorId,
        ifnull(t2.text,'') as text,
        t1.fake_name as fakeName,
        t3.channel_id as channelId
        FROM
        jc_comment t1
        LEFT JOIN jc_comment_ext t2 ON t1.comment_id = t2.comment_id
        LEFT JOIN jc_content t3 on t3.content_id=t1.content_id
        WHERE
        t1.comment_user_id = #{userId,jdbcType=BIGINT}
        AND t1.parent_id is null
        ORDER BY t1.create_time DESC, t1.comment_id DESC
        limit #{start,jdbcType=BIGINT}, #{pageSize,jdbcType=BIGINT}
    </select> -->

    <select id="getCommentByAncestorId" resultType="com.ace.cms.dto.CommentDto">
        SELECT
        t1.comment_id as commentId,
        t1.content_id contentId,
        t1.comment_user_id commentUserId,
        t1.create_time createTime,
        t1.reply_count replyCount,
        t1.parent_id parentId,
        t1.is_recommend isRecommend,
        t1.ancestor_id as ancestorId,
        ifnull(t2.text,'') as text,
        t1.fake_name as fakeName
        FROM
        jc_comment t1
        LEFT JOIN jc_comment_ext t2 ON t1.comment_id = t2.comment_id
        WHERE
        t1.content_id = #{contentId,jdbcType=BIGINT}
        AND t1.ancestor_id = #{commentId,jdbcType=BIGINT}
        ORDER BY t1.create_time,t1.comment_id DESC
        limit #{start,jdbcType=BIGINT}, #{pageSize,jdbcType=BIGINT}
    </select>
    
    
    <select id="getCommentByUserId" resultType="com.ace.cms.dto.CommentDto">
        SELECT
        t1.comment_id as commentId,
        t1.content_id contentId,
        t1.comment_user_id commentUserId,
        t1.create_time createTime,
        t1.reply_count replyCount,
        t1.parent_id parentId,
        t1.is_recommend isRecommend,
        t1.ancestor_id as ancestorId,
        ifnull(t2.text,'') as text,
        t1.fake_name as fakeName,
        t3.channel_id as channelId,
        t3.sort_date as contentDate
        FROM
        jc_comment t1
        LEFT JOIN jc_comment_ext t2 ON t1.comment_id = t2.comment_id
        LEFT JOIN jc_content t3 on t3.content_id=t1.content_id
        WHERE
        t1.comment_user_id = #{userId,jdbcType=BIGINT}
        ORDER BY t1.create_time DESC,t1.comment_id DESC
        limit #{start,jdbcType=BIGINT}, #{pageSize,jdbcType=BIGINT}
    </select>


	<select id="getReplyByUserId" resultType="com.ace.cms.dto.CommentDto">
        SELECT
        t1.comment_id as commentId,
        t1.content_id contentId,
        t1.comment_user_id commentUserId,
        t1.create_time createTime,
        t1.reply_count replyCount,
        t1.parent_id parentId,
        t1.is_recommend isRecommend,
        t1.ancestor_id as ancestorId,
        ifnull(t2.text,'') as text,
        t1.fake_name as fakeName,
        t3.channel_id as channelId,
        t3.sort_date as contentDate
        FROM
        jc_comment t1
        LEFT JOIN jc_comment_ext t2 ON t1.comment_id = t2.comment_id
        LEFT JOIN jc_content t3 on t3.content_id=t1.content_id
        WHERE
        t1.reply_user_id = #{userId,jdbcType=BIGINT}
        ORDER BY t1.create_time DESC,t1.comment_id DESC
        limit #{start,jdbcType=BIGINT}, #{pageSize,jdbcType=BIGINT}
    </select>


    <select id="getAllCommentByAncestorId" resultType="com.ace.cms.dto.CommentDto">
        SELECT
        t1.comment_id as commentId,
        t1.content_id contentId,
        t1.comment_user_id commentUserId,
        t1.create_time createTime,
        t1.reply_count replyCount,
        t1.parent_id parentId,
        t1.is_recommend isRecommend,
        t1.ancestor_id as ancestorId,
        ifnull(t2.text,'') as text,
        t1.fake_name as fakeName
        FROM
        jc_comment t1
        LEFT JOIN jc_comment_ext t2 ON t1.comment_id = t2.comment_id
        WHERE
        t1.content_id = #{contentId,jdbcType=BIGINT}
        AND t1.ancestor_id = #{commentId,jdbcType=BIGINT}
        ORDER BY t1.create_time,t1.comment_id DESC
    </select>

    <select id="getCommentByParentId" resultType="com.ace.cms.dto.CommentDto">
        SELECT
        t1.comment_id as commentId,
        t1.content_id contentId,
        t1.comment_user_id commentUserId,
        t1.create_time createTime,
        t1.reply_count replyCount,
        t1.parent_id parentId,
        t1.is_recommend isRecommend,
        t1.ancestor_id as ancestorId,
        ifnull(t2.text,'') as text,
        t1.fake_name as fakeName
        FROM
        jc_comment t1
        LEFT JOIN jc_comment_ext t2 ON t1.comment_id = t2.comment_id
        WHERE
          t1.comment_id = #{parentId,jdbcType=BIGINT}
        limit 1
    </select>

    <update id="addComments">
        UPDATE jc_comment
        SET reply_count = reply_count + 1
        WHERE
        comment_id = #{commentId,jdbcType=BIGINT}

    </update>


</mapper>